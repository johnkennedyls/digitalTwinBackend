plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '2.7.12'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.icesi.edu.co.pdg'
version = '0.0.1'
sourceCompatibility = '11'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter:2.5.8'
    implementation 'org.mapstruct:mapstruct:1.3.1.Final'
    implementation 'com.zeroc:ice:3.7.9'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.1.Final'
    implementation 'org.postgresql:postgresql:42.2.24'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.5.8'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.5.8'
    implementation 'org.springframework.boot:spring-boot-starter-websocket:2.5.8'
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    implementation 'org.springframework:spring-expression:5.3.14'
    implementation 'org.springframework:spring-context:5.3.14'
    implementation 'org.hibernate:hibernate-core:5.5.3.Final'
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.6'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.6'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.12.6'
    implementation 'org.springframework.boot:spring-boot-starter-mail:2.5.8'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.5.8'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'icesi.plantapiloto:common:1.0'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools:2.5.8'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.8'
    implementation 'co.edu.icesi.dev.saamfi:saamfi-security:0.0.1'
    runtimeOnly  'io.jsonwebtoken:jjwt-impl:0.11.2'
	runtimeOnly  'io.jsonwebtoken:jjwt-jackson:0.11.2'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}
